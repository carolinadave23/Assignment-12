4.10
8.
  Using a loop and indexed addressing, write code that rotates the members of a 32-bit integer array 
  forward one position.  The value at the end of the array must wrap around to the first position.  
  For example, the array [10,20,30,40] would be transformed into [40,10,20,30]


ExitProcess 	PROTO
WriteInt64  	PROTO
Crlf		PROTO
ReadInt64	PROTO


.data
myArray		QWORD 10d,20d,30d,40d
finalArray  QWORD 4 DUP(0)

.code
main proc

	mov rcx, 4
	mov rsi, 0

	LOOP1:

		mov rax, myArray[rsi * 8]
		call WriteInt64
		inc rsi

	LOOP LOOP1

	call Crlf
	mov rcx, 3
	mov rsi, 0



	POOPLOOP:

		; figure out our loop index and get the current index's value
		mov rax, myArray[rsi * 8]
		mov r10, rsi
		inc r10
		mov r11, myArray[r10 * 8]

		mov myArray[rsi * 8], r11
		mov myArray[r10 * 8], rax

		
		inc rsi
	LOOP POOPLOOP

	mov rcx, 4
	mov rsi, 0

	LOOP2:

		mov rax, myArray[rsi * 8]
		call WriteInt64
		inc rsi

	LOOP LOOP2

	call ReadInt64
	call ExitProcess
main endp
end
